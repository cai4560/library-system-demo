buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework:springloaded:1.2.7.RELEASE")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'com.thoughtworks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	runtime('mysql:mysql-connector-java')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.7'
}

task cleanSqlmaps(type: Delete) {
	def files = fileTree("${buildDir}/classes/java", {
		include "**/*.xml"
	})
	delete files
}

task copySqlmaps(type: Copy, dependsOn: cleanSqlmaps) {
	from "${projectDir}/src/main/java"
	include "**/*.xml"
	into "${buildDir}/classes/java/main"
	includeEmptyDirs = false
}

processResources.dependsOn {
	copySqlmaps
}
